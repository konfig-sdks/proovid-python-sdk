# coding: utf-8

"""
    Proovid Electronic Verification

    Proovid API is a RESTful application that specializes in electronic verification (Proof of address and Proof of Identity) by employing an advanced risk-tiered approacch in combination with a smart Risk assessment system. <a href='docs/PROOVid_ELV.pdf' target='_blank'>More information</a> 

    The version of the OpenAPI document: v1
    Contact: info@proovid.com
    Created by: http://www.proovid.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from proovid_python_sdk import schemas  # noqa: F401


class AddressVerificationResult(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.Int64Schema
            
            
            class reference(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'reference':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            status = schemas.Int32Schema
            verificationLevel = schemas.Int32Schema
        
            @staticmethod
            def levels() -> typing.Type['DescriptionLevels']:
                return DescriptionLevels
        
            @staticmethod
            def documentVerification() -> typing.Type['AddressDocumentVerificationResult']:
                return AddressDocumentVerificationResult
            
            
            class userVerificationUrl(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'userVerificationUrl':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class qrCode(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'qrCode':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            creationTime = schemas.DateTimeSchema
            
            
            class error(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'error':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "id": id,
                "reference": reference,
                "status": status,
                "verificationLevel": verificationLevel,
                "levels": levels,
                "documentVerification": documentVerification,
                "userVerificationUrl": userVerificationUrl,
                "qrCode": qrCode,
                "creationTime": creationTime,
                "error": error,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reference"]) -> MetaOapg.properties.reference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["verificationLevel"]) -> MetaOapg.properties.verificationLevel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["levels"]) -> 'DescriptionLevels': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["documentVerification"]) -> 'AddressDocumentVerificationResult': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userVerificationUrl"]) -> MetaOapg.properties.userVerificationUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["qrCode"]) -> MetaOapg.properties.qrCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creationTime"]) -> MetaOapg.properties.creationTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["error"]) -> MetaOapg.properties.error: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "reference", "status", "verificationLevel", "levels", "documentVerification", "userVerificationUrl", "qrCode", "creationTime", "error", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reference"]) -> typing.Union[MetaOapg.properties.reference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["verificationLevel"]) -> typing.Union[MetaOapg.properties.verificationLevel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["levels"]) -> typing.Union['DescriptionLevels', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["documentVerification"]) -> typing.Union['AddressDocumentVerificationResult', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userVerificationUrl"]) -> typing.Union[MetaOapg.properties.userVerificationUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["qrCode"]) -> typing.Union[MetaOapg.properties.qrCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creationTime"]) -> typing.Union[MetaOapg.properties.creationTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["error"]) -> typing.Union[MetaOapg.properties.error, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "reference", "status", "verificationLevel", "levels", "documentVerification", "userVerificationUrl", "qrCode", "creationTime", "error", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        reference: typing.Union[MetaOapg.properties.reference, None, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        verificationLevel: typing.Union[MetaOapg.properties.verificationLevel, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        levels: typing.Union['DescriptionLevels', schemas.Unset] = schemas.unset,
        documentVerification: typing.Union['AddressDocumentVerificationResult', schemas.Unset] = schemas.unset,
        userVerificationUrl: typing.Union[MetaOapg.properties.userVerificationUrl, None, str, schemas.Unset] = schemas.unset,
        qrCode: typing.Union[MetaOapg.properties.qrCode, None, str, schemas.Unset] = schemas.unset,
        creationTime: typing.Union[MetaOapg.properties.creationTime, str, datetime, schemas.Unset] = schemas.unset,
        error: typing.Union[MetaOapg.properties.error, None, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AddressVerificationResult':
        return super().__new__(
            cls,
            *args,
            id=id,
            reference=reference,
            status=status,
            verificationLevel=verificationLevel,
            levels=levels,
            documentVerification=documentVerification,
            userVerificationUrl=userVerificationUrl,
            qrCode=qrCode,
            creationTime=creationTime,
            error=error,
            _configuration=_configuration,
            **kwargs,
        )

from proovid_python_sdk.model.address_document_verification_result import AddressDocumentVerificationResult
from proovid_python_sdk.model.description_levels import DescriptionLevels
